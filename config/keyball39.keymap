#define DEFAULT 0  // Colmak Mod-DH
#define QWERTY  1  // QWERTY Alternative
#define NUM     2  // Numbers and related symbols
#define SYM     3  // Symbols mapped similarly to numbers
#define BUTTON  4  // Button layer in conjunction with a mouse or input device
#define MOUSE   5  // Mouse layer also used as a scroll layer
#define SNIPE   6  // Snipe layer for more precise cursor control
#define NAV     7  // Navigation layer for arrow keys and navigation keys
#define FUN     8  // Function layer for function keys
#define MEDIA   9  // Media layer for media control keys

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_clr_dbl: bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "Clear bluetooth profile";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>;
        };

        td_boot: double_tap_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "Double Tap Bootloader";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        ht_layertrans: ht_layertrans {
            compatible = "zmk,behavior-hold-tap";
            label = "Switches to Layer on Hold, Trans on Tap";
            bindings = <&mo>, <&trans>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        miryoku_alpha_colmak {
            label = "COL-DH";
            bindings = <
&kp Q        &kp W         &kp F       &kp P         &kp B                                &kp J            &kp L        &kp U       &kp Y        &kp APOS
&mt LCTRL A  &mt LALT R    &mt LCMD S  &mt LSHFT T   &kp G                                &kp M            &mt LSHFT N  &mt LGUI E  &mt LCTRL I  &mt LCTRL O
&kp Z        &kp X         &kp C       &kp D         &kp V                                &kp K            &kp H        &kp COMMA   &kp DOT      &kp FSLH
&kp LCTRL    &kp LEFT_WIN  &kp LALT    &lt 9 ESCAPE  &lt 7 SPACE  &lt 5 TAB  &lt 3 ENTER  &lt 2 BACKSPACE                                        &lt 8 DEL
            >;
        };

        miryoku_alpha_qwerty {
            label = "QWERTY";
            bindings = <
&kp Q        &kp W         &kp E       &kp R         &kp T                                &kp Y            &kp U        &kp I       &kp O        &kp P
&mt LCTRL A  &mt LALT S    &mt LCMD D  &mt LSHFT F   &kp G                                &kp H            &mt LSHFT J  &mt LGUI K  &mt LCTRL L  &mt LCTRL SEMICOLON
&kp Z        &kp X         &kp C       &kp V         &kp B                                &kp N            &kp M        &kp COMMA   &kp DOT      &kp FSLH
&kp LCTRL    &kp LEFT_WIN  &kp LALT    &lt 0 ESCAPE  &lt 9 SPACE  &lt 5 TAB  &lt 3 ENTER  &lt 2 BACKSPACE                                        &lt 0 DEL
            >;
        };

        miryoku_num {
            label = "NUM";
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                     &none  &none      &none     &none     &td_boot
&kp SEMI   &kp N4  &kp N5  &kp N6   &kp EQUAL                    &none  &kp LSHFT  &kp LGUI  &kp LALT  &kp LCTRL
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH                     &none  &none      &none     &none     &none
&none      &none   &none   &kp DOT  &kp N0     &kp MINUS  &none  &none                                 &none
            >;
        };

        miryoku_sym {
            label = "SYM";
            bindings = <
&kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC                    &none  &none      &none     &none     &td_boot
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                    &none  &kp LSHFT  &kp LGUI  &kp LALT  &kp LCTRL
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                    &none  &none      &none     &none     &none
&none      &none     &none      &kp LPAR   &kp RPAR  &kp UNDER  &none  &none                                 &none
            >;
        };

        miryoku_button {
            bindings = <
&kp K_UNDO          &kp K_CUT     &kp K_COPY  &kp K_PASTE  &kp K_REDO                        &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE   &kp K_REDO
&kp LCTRL           &kp LEFT_ALT  &kp LGUI    &kp LSHFT    &kp SPACE                         &trans      &kp LSHFT  &kp LGUI    &kp LEFT_ALT  &kp LCTRL
&kp K_UNDO          &kp K_CUT     &kp K_COPY  &kp K_PASTE  &kp K_REDO                        &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE   &kp K_REDO
&ht_layertrans 6 0  &trans        &trans      &mkp MCLK    &mkp LCLK   &mkp RCLK  &mkp RCLK  &mkp LCLK                                        &mkp MCLK
            >;

            label = "Button";
        };

        miryoku_mouse {
            label = "MOUSE";
            bindings = <
&td_boot            &none         &none     &none      &none                        &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO
&kp LCTRL           &kp LEFT_ALT  &kp LGUI  &kp LSHFT  &mkp LCLK                    &none       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&none               &none         &none     &none      &none                        &mkp MCLK   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
&ht_layertrans 6 0  &none         &none     &none      &none      &none  &mkp LCLK  &mkp LCLK                                                 &mkp LCLK
            >;
        };

        miryoku_snipe {
            label = "SNIPE";
            bindings = <
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };

        miryoku_nav {
            label = "NAV";
            bindings = <
&td_boot            &none         &none     &none      &none                  &kp K_REDO  &kp K_PASTE     &kp K_COPY  &kp K_CUT  &kp K_UNDO
&kp LCTRL           &kp LEFT_ALT  &kp LGUI  &kp LSHFT  &none                  &kp CAPS    &kp LEFT_ARROW  &kp DOWN    &kp UP     &kp RIGHT
&none               &none         &none     &none      &none                  &kp INS     &kp HOME        &kp PG_DN   &kp PG_UP  &kp END
&ht_layertrans 6 0  &none         &none     &none      &none  &none  &kp RET  &kp BSPC                                           &kp DEL
            >;
        };

        miryoku_fun {
            label = "FUN";
            bindings = <
&kp F12             &kp F7  &kp F8  &kp F9     &kp PSCRN                        &none  &none      &none     &none     &td_boot
&kp F11             &kp F4  &kp F5  &kp F6     &kp SLCK                         &none  &kp LSHFT  &kp LGUI  &kp LALT  &kp LCTRL
&kp F10             &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK                  &none  &none      &none     &none     &none
&ht_layertrans 6 0  &none   &none   &kp K_APP  &kp SPACE        &kp TAB  &none  &none                                 &none
            >;
        };

        miryoku_media {
            bindings = <
&td_boot   &trans        &trans    &trans     &trans                      &bt_clr_dbl       &trans        &trans        &trans           &trans
&kp LCTRL  &kp LEFT_ALT  &kp LGUI  &kp LSHFT  &trans                      &kp K_MUTE        &kp C_PREV    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT
&trans     &trans        &trans    &trans     &trans                      &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4
&trans     &trans        &trans    &trans     &trans  &trans  &kp C_STOP  &kp C_PLAY_PAUSE                                               &trans
            >;

            label = "MEDIA";
        };
    };
};
